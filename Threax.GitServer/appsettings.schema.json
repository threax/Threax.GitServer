{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "properties": {
    "JwtAuth": {
      "$ref": "#/definitions/JwtAuth"
    },
    "AppConfig": {
      "$ref": "#/definitions/AppConfig"
    },
    "ClientConfig": {
      "$ref": "#/definitions/ClientConfig"
    },
    "Cors": {
      "$ref": "#/definitions/Cors"
    },
    "Build": {
      "$ref": "#/definitions/Build"
    },
    "Deploy": {
      "$ref": "#/definitions/Deploy"
    },
    "DisplayConfig": {
      "$ref": "#/definitions/DisplayConfig"
    },
    "IdServerClient": {
      "$ref": "#/definitions/IdServerClient"
    },
    "SharedClientCredentials": {
      "$ref": "#/definitions/SharedClientCredentials"
    },
    "Logging": {
      "type": [
        "null",
        "object"
      ]
    }
  },
  "definitions": {
    "JwtAuth": {
      "title": "IdServerAuthAppOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Authority": {
          "type": [
            "null",
            "string"
          ],
          "description": "The authority to use. Should be the url of the id server."
        },
        "ClientId": {
          "type": [
            "null",
            "string"
          ],
          "description": "The client id to use."
        },
        "Scope": {
          "type": [
            "null",
            "string"
          ],
          "description": "The primary scope for this app."
        },
        "DisplayName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The display name for this application, will be used for the id server metadata."
        },
        "AdditionalScopes": {
          "type": [
            "array",
            "null"
          ],
          "description": "Any additional scopes that this app should request for user tokens. This will allow\nthose user tokens to be flowed to those additional apps.",
          "items": {
            "type": "string"
          }
        },
        "ClientCredentialsScopes": {
          "type": [
            "array",
            "null"
          ],
          "description": "Any scopes that will be used in the client credentials version of the client metadata.\nThe client credentials are how this applicaiton can log into other services to get their\ndata. Those services should be listed here so they are included in the application's jwt\nthat id server creates. This is used when the applicaiton needs to login to a service directly\nand cannot just send the user's token along.",
          "items": {
            "type": "string"
          }
        },
        "ClientSecret": {
          "type": [
            "null",
            "string"
          ],
          "description": "The client secret for this app. This can be null to have no secret. It defaults to\n\"notyetdefined\". Ideally this should be set to something."
        }
      }
    },
    "AppConfig": {
      "title": "AppConfig",
      "type": "object",
      "description": "The primary configuration for the app.",
      "additionalProperties": false,
      "properties": {
        "BaseUrl": {
          "type": [
            "null",
            "string"
          ],
          "description": "The base url of the application, by default automatically discovered."
        },
        "ConnectionString": {
          "type": [
            "null",
            "string"
          ],
          "description": "The connection string for the app's primary database."
        },
        "DetailedErrors": {
          "type": "boolean",
          "description": "True to turn on detailed error messages."
        },
        "ShowPII": {
          "type": "boolean",
          "description": "Set this to true to ShowPII in the logs."
        },
        "PathBase": {
          "type": [
            "null",
            "string"
          ],
          "description": "The base path the app lives on. Used for cookie paths and to enforce the url spelling.\nCan be null to live on the root path."
        },
        "AllowApiExplorer": {
          "type": "boolean",
          "description": "Should the api explorer be accessible, false by default. The api explorer is pure client side\nand will not expose methods the user cannot access on the service, so if I hit the explorer page\nlogged in vs logged out it will behave differently. That said it is probably best to leave this\noff in production."
        },
        "UseAssetBundles": {
          "type": "boolean",
          "description": "Set this to true to use asset bundles instead of individual client side files."
        },
        "EnableValueProviders": {
          "type": "boolean",
          "description": "Set this to false to disable value provider resolution. This should be true for produciton or your value providers\nwon't work, but you can set it to false in tools mode, which will keep the value providers from resolving when\ndoing stuff like regenerating clients. The default is true."
        },
        "CacheToken": {
          "type": [
            "null",
            "string"
          ],
          "description": "The token to use as a cache token. This is a unique id for a particular website build. If this is null a hash\nof the main library that contains Startup.cs will be used. You can set this to something unique like your \nbuild number and that will ensure the cache always invalidates with each new release. Do not use the same\nvalue for multiple releases, or clients will never update their caches. You can set this to 'nocache' to totally\ndisable the cache. Default: null (use assembly hash)"
        },
        "CacheControlHeaderString": {
          "type": [
            "null",
            "string"
          ],
          "description": "Set this to the string to use for the cache-control header on anything that is cached.\nDefault: 'private, max-age=2592000, stale-while-revalidate=86400, immutable'"
        },
        "CacheStaticAssets": {
          "type": "boolean",
          "description": "Set this to true to cache static assets like javascript and css files."
        },
        "EnableResponseCompression": {
          "type": "boolean",
          "description": "Set this to true to enable response compression from inside this application directly. \nIf this is enabled it really only applies to static assets. The razor views are not\ncompressed and neither are the api results due to issues with https and compression.\nDefault: false (no compression)"
        },
        "EnableIdServerMetadata": {
          "type": "boolean",
          "description": "Set this to true to enable the metadata for the id server. This can be disabled after\ninitial setup. Default: true"
        },
        "AddUserSecrets": {
          "type": "boolean",
          "description": "Set this to true to add user secrets. Good for development. Default: false"
        }
      }
    },
    "ClientConfig": {
      "title": "ClientConfig",
      "type": "object",
      "description": "Client side configuration, copied onto pages returned to client, so don't include secrets.",
      "additionalProperties": false,
      "properties": {
        "ServiceUrl": {
          "type": [
            "null",
            "string"
          ],
          "description": "The url of the app's service, defaults to ~/api. You can\nspecify an absolute url here if you want."
        },
        "AccessTokenPath": {
          "type": [
            "null",
            "string"
          ]
        },
        "BearerCookieName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The path to the bearer cookie. Move this somewhere else"
        }
      }
    },
    "Cors": {
      "title": "CorsManagerOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "UnlimitedAccess": {
          "type": "boolean",
          "description": "Fully remove all CORS protection from this website. Not reccomended for production."
        },
        "AllowedOrigins": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Build": {
      "title": "BuildConfig",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ImageName": {
          "type": [
            "null",
            "string"
          ]
        },
        "RepoUrl": {
          "type": [
            "null",
            "string"
          ]
        },
        "Dockerfile": {
          "type": [
            "null",
            "string"
          ]
        },
        "Branch": {
          "type": [
            "null",
            "string"
          ]
        },
        "BaseTag": {
          "type": [
            "null",
            "string"
          ]
        },
        "PullImages": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "PullAllImages": {
          "type": "boolean"
        },
        "Context": {
          "type": [
            "null",
            "string"
          ]
        }
      }
    },
    "Deploy": {
      "title": "DeploymentConfig",
      "type": "object",
      "description": "Configuration for k8s deployment.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the app. Is used as a unique key for many settings including urls."
        },
        "Domain": {
          "type": [
            "null",
            "string"
          ],
          "description": "The domain to host the apps on."
        },
        "User": {
          "type": [
            "null",
            "string"
          ],
          "description": "The user id to run the app as. Default: 10000."
        },
        "Group": {
          "type": [
            "null",
            "string"
          ],
          "description": "The group id to run the app as. Default: 10000."
        },
        "InitCommand": {
          "type": [
            "null",
            "string"
          ],
          "description": "If this is set to a string that command will be run inside an InitContainer before the main container is started."
        },
        "InitSecrets": {
          "type": [
            "null",
            "object"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "Volumes": {
          "type": [
            "null",
            "object"
          ],
          "description": "A map of volume mounts.",
          "additionalProperties": {
            "$ref": "#/definitions/Deploy/definitions/Volume"
          }
        },
        "Secrets": {
          "type": [
            "null",
            "object"
          ],
          "description": "A map of secrets.",
          "additionalProperties": {
            "$ref": "#/definitions/Deploy/definitions/Secret"
          }
        },
        "Environment": {
          "type": [
            "null",
            "object"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "Commands": {
          "type": [
            "null",
            "object"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "MemoryLimit": {
          "type": [
            "null",
            "string"
          ]
        },
        "Ports": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string"
          }
        },
        "PodJsonFile": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the pod info json file to generate. Default: pod.json."
        },
        "AutoMountAppSettings": {
          "type": "boolean",
          "description": "Set this to true to auto mount the app settings config. Default: true."
        },
        "AppSettingsMountPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "The mount path for the appsettings file. Default: /app/appsettings.Production.json."
        },
        "AppSettingsSubPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "The sub path for the appsettings file. Default: appsettings.Production.json."
        },
        "ImageName": {
          "type": [
            "null",
            "string"
          ]
        }
      },
      "definitions": {
        "Volume": {
          "type": "object",
          "description": "A volume definition.",
          "additionalProperties": false,
          "properties": {
            "Source": {
              "type": [
                "null",
                "string"
              ],
              "description": "The source directory. If no leading / is provided the path will be relative to the AppData path for the app."
            },
            "Destination": {
              "type": [
                "null",
                "string"
              ],
              "description": "The path to mount the volume in in the container."
            },
            "Type": {
              "description": "The type of the volume mount. Default: Directory",
              "oneOf": [
                {
                  "$ref": "#/definitions/Deploy/definitions/PathType"
                }
              ]
            },
            "ManagePermissions": {
              "type": "boolean"
            }
          }
        },
        "PathType": {
          "type": "string",
          "description": "",
          "x-enumNames": [
            "Directory",
            "File"
          ],
          "enum": [
            "Directory",
            "File"
          ]
        },
        "Secret": {
          "type": "object",
          "description": "A secret definition.",
          "additionalProperties": false,
          "properties": {
            "SecretName": {
              "type": [
                "null",
                "string"
              ],
              "description": "The name of the secret to load. This is optional and one will be generated if this is not specified. Default: k8sconfig-secret-{appName}-{key}"
            },
            "Source": {
              "type": [
                "null",
                "string"
              ],
              "description": "The source file to load a file as the secret. This is optional. If the secret already exists you can use SecretName also."
            },
            "Destination": {
              "type": [
                "null",
                "string"
              ],
              "description": "The path to mount the secret in in the target container."
            },
            "Type": {
              "description": "The type of the secret mount. Default: Directory",
              "oneOf": [
                {
                  "$ref": "#/definitions/Deploy/definitions/PathType"
                }
              ]
            },
            "AllowMissing": {
              "type": "boolean"
            },
            "Base64": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/definitions/Deploy/definitions/CreateBase64Settings"
                }
              ]
            },
            "Certificate": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "$ref": "#/definitions/Deploy/definitions/CreateCertSettings"
                }
              ]
            }
          }
        },
        "CreateBase64Settings": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Create": {
              "type": "boolean"
            },
            "MinLength": {
              "type": "integer",
              "format": "int32"
            },
            "MaxLength": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "CreateCertSettings": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Create": {
              "type": "boolean"
            },
            "CommonName": {
              "type": [
                "null",
                "string"
              ]
            },
            "ExpirationMonths": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "DisplayConfig": {
      "title": "DisplayConfig",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SiteName": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the site. Will be reflected in various places."
        },
        "SiteNameShort": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the site in a short form. Defaults to the normal site name."
        },
        "Favicon": {
          "type": [
            "null",
            "string"
          ],
          "description": "The name of the favicon. Will be served as the favicon."
        },
        "Description": {
          "type": [
            "null",
            "string"
          ],
          "description": "The description for the app. Defaults to the SiteName."
        },
        "Icon": {
          "description": "The name of the icon. Will be used in the manifest.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/DisplayConfig/definitions/Icon"
            }
          ]
        },
        "StartUrl": {
          "type": [
            "null",
            "string"
          ]
        },
        "Display": {
          "type": [
            "null",
            "string"
          ]
        },
        "ThemeColor": {
          "type": [
            "null",
            "string"
          ]
        },
        "BackgroundColor": {
          "type": [
            "null",
            "string"
          ]
        }
      },
      "definitions": {
        "Icon": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "src": {
              "type": [
                "null",
                "string"
              ]
            },
            "sizes": {
              "type": [
                "null",
                "string"
              ]
            },
            "type": {
              "type": [
                "null",
                "string"
              ]
            }
          }
        }
      }
    },
    "IdServerClient": {
      "title": "OpenIdConnectClientCredentialsClientOptions",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ServiceUrl": {
          "type": [
            "null",
            "string"
          ]
        },
        "ClientCredentials": {
          "description": "The options when using ClientCredentials, otherwise ignored.",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/IdServerClient/definitions/ClientCredentailsAccessTokenFactoryOptions"
            }
          ]
        }
      },
      "definitions": {
        "ClientCredentailsAccessTokenFactoryOptions": {
          "type": "object",
          "description": "Options for the ClientCredentialsAccessTokenFactory",
          "additionalProperties": false,
          "properties": {
            "IdServerHost": {
              "type": [
                "null",
                "string"
              ],
              "description": "The host for the identity server providing tokens."
            },
            "ClientId": {
              "type": [
                "null",
                "string"
              ],
              "description": "The client id to login with."
            },
            "ClientSecret": {
              "type": [
                "null",
                "string"
              ],
              "description": "The secret for the client id."
            },
            "Scope": {
              "type": [
                "null",
                "string"
              ],
              "description": "The scope that will be accessed."
            },
            "ExpirationTimeFraction": {
              "type": "number",
              "description": "This represents the fraction of the total lifetime of the access token to keep using it until\nit should be refreshed. It should be between 0 and 1, the default is 0.8 (use token for 80% of the total time, then refresh)",
              "format": "double"
            }
          }
        }
      }
    },
    "SharedClientCredentials": {
      "title": "SharedClientCredentials",
      "type": "object",
      "description": "Client credentials settings that can be shared.",
      "additionalProperties": false,
      "properties": {
        "IdServerHost": {
          "type": [
            "null",
            "string"
          ],
          "description": "The host for the identity server providing tokens."
        },
        "ClientId": {
          "type": [
            "null",
            "string"
          ],
          "description": "The client id to login with."
        },
        "ClientSecret": {
          "type": [
            "null",
            "string"
          ],
          "description": "The secret for the client id."
        }
      }
    }
  }
}